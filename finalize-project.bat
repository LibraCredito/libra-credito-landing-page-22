@echo off
echo ========================================
echo LIMPEZA FINAL - PROJETO PRODUTIVO
echo ========================================

echo.
echo Removendo arquivos de desenvolvimento/teste antigos...

echo.
echo üóëÔ∏è REMOVENDO ARQUIVOS DE TESTE:

if exist "test-extracao-valores.bat" (
    del "test-extracao-valores.bat"
    echo ‚úì Removido: test-extracao-valores.bat
)

if exist "remove-test-component.bat" (
    del "remove-test-component.bat"
    echo ‚úì Removido: remove-test-component.bat
)

if exist "cleanup-test-component.bat" (
    del "cleanup-test-component.bat"
    echo ‚úì Removido: cleanup-test-component.bat
)

if exist "ValueExtractionTest.tsx.deleted" (
    del "ValueExtractionTest.tsx.deleted"
    echo ‚úì Removido: ValueExtractionTest.tsx.deleted
)

echo.
echo üóëÔ∏è REMOVENDO SCRIPTS DE DEBUG ANTIGOS:

if exist "debug-api-response.bat" (
    del "debug-api-response.bat"
    echo ‚úì Removido: debug-api-response.bat
)

if exist "debug-api-console.js" (
    del "debug-api-console.js"
    echo ‚úì Removido: debug-api-console.js
)

if exist "test-debug-completo.bat" (
    del "test-debug-completo.bat"
    echo ‚úì Removido: test-debug-completo.bat
)

if exist "teste-api-manual.js" (
    del "teste-api-manual.js"
    echo ‚úì Removido: teste-api-manual.js
)

echo.
echo üóëÔ∏è REMOVENDO DOCUMENTACAO DE DEBUG:

if exist "DEBUG_API_INVESTIGATION.md" (
    del "DEBUG_API_INVESTIGATION.md"
    echo ‚úì Removido: DEBUG_API_INVESTIGATION.md
)

if exist "CORRECAO_CRITICA_EXTRACAO_VALORES.md" (
    del "CORRECAO_CRITICA_EXTRACAO_VALORES.md"
    echo ‚úì Removido: CORRECAO_CRITICA_EXTRACAO_VALORES.md
)

if exist "CORRECAO_LOGICA_30_PERCENT.md" (
    del "CORRECAO_LOGICA_30_PERCENT.md"
    echo ‚úì Removido: CORRECAO_LOGICA_30_PERCENT.md
)

echo.
echo üìã MANTENDO ARQUIVOS IMPORTANTES:
echo    ‚úì LAYOUT_LADO_A_LADO_FINAL.md (documentacao final)
echo    ‚úì SIMULACAO_INTELIGENTE_FINAL.md (documentacao funcional)
echo    ‚úì test-layout-final.bat (teste principal)
echo    ‚úì Todos os componentes de producao

echo.
echo üß™ TESTE FINAL DE COMPILACAO:
npm run build

if %ERRORLEVEL% EQU 0 (
    echo.
    echo ========================================
    echo üéâ PROJETO FINALIZADO E LIMPO!
    echo ========================================
    echo.
    echo ‚úÖ RECURSOS IMPLEMENTADOS:
    echo    ‚Ä¢ Simulacao inteligente com 4 tipos de resposta
    echo    ‚Ä¢ Layout lado a lado responsivo
    echo    ‚Ä¢ Componentes visuais especificos
    echo    ‚Ä¢ Formulario de contato integrado
    echo    ‚Ä¢ Tratamento de erros contextual
    echo    ‚Ä¢ Valores matematicamente corretos
    echo.
    echo ‚úÖ PRONTO PARA PRODUCAO:
    echo    ‚Ä¢ Codigo limpo e documentado
    echo    ‚Ä¢ TypeScript type-safe
    echo    ‚Ä¢ Responsividade completa
    echo    ‚Ä¢ UX otimizada para conversao
    echo.
    echo üöÄ Para testar:
    echo    .\test-layout-final.bat
    echo.
    echo üöÄ Para deploy:
    echo    npm run build
    echo.
) else (
    echo ‚ùå ERRO na compilacao!
    echo Verifique os erros acima
)

pause
